sudo: required
language: cpp
services:
  - docker

env:
  - DIST_NAME: ubuntu
    DIST_VERS: 16.04
    TAG: archer
#  - DIST_NAME: ubuntu
#    DIST_VERS: 14.04
#  - DIST_NAME: ubuntu
#    DIST_VERS: 12.04

before_install:
  - docker pull ${DIST_NAME}:${DIST_VERS}
  - docker build --rm=true --file=ci/DockerFile.${DIST_NAME}-${DIST_VERS} --tag=${DIST_NAME}-${DIST_VERS}:${TAG} .
  - docker run --name ${TAG} -d -t ${DIST_NAME}-${DIST_VERS}:${TAG} /bin/bash > container.id
  
script:
  - CONTAINER_ID=$(cat container.id)
  - docker ps -a
  - docker exec -t ${TAG} pwd
  - docker exec -t ${TAG} ls
  - docker exec -t ${TAG} ls /home/
#  - docker ps -a
#  - docker exec -t ${TAG} hostname
#  - docker exec -t ${TAG} ls
#  - docker exec -t ${TAG} echo '22' > test
#  - docker cp ${CONTAINER_ID}:/workdir/test .
#  - cat test
  
#language: cpp
#
#services:
#  - docker

#dist: trusty
#addons:
#  apt:
#    sources:
#    - ubuntu-toolchain-r-test
#    packages:
#    - gcc-5
#    - g++-5

#env:
#  global:
#    - LLVM_VERSION=3.9.0
#    - LLVM_ARCHIVE_PATH=$HOME/clang+llvm.tar.xz
    
#before_install:
#  - docker pull ubuntu:16.04
#  - docker run -it ubuntu bash
#  - wget http://llvm.org/releases/$LLVM_VERSION/clang+llvm-$LLVM_VERSION-x86_64-linux-gnu-ubuntu-14.04.tar.xz -O $LLVM_ARCHIVE_PATH
#  - mkdir $HOME/usr
#  - tar xf $LLVM_ARCHIVE_PATH -C $HOME/usr --strip-components 1
#  - export PATH=$HOME/usr/bin:$PATH
#  - export LD_LIBRARY_PATH=$HOME/usr/bin:$LD_LIBRARY_PATH
#
#install:
#  # Create tools dir
#  - mkdir -p tools && cd tools
#  # Obtain and install cmake >= 3.4.3
#  - wget https://cmake.org/files/v3.7/cmake-3.7.1.tar.gz;
#    tar xzf cmake-3.7.1.tar.gz;
#    cd cmake-3.7.1;
#    mkdir build && cd build;
#    ../bootstrap --prefix=/usr;
#    make && sudo make install;
#    cd ..;
#  # Obtain and install ninja
#  - mkdir .tmp
#  - curl -L https://github.com/ninja-build/ninja/releases/download/v1.7.2/ninja-linux.zip -o .tmp/ninja-linux.zip
#  - unzip .tmp/ninja-linux.zip -d .tmp
#  - sudo cp .tmp/ninja /usr/bin 
  
#before_script:
#  - export PATH=$PATH:$PWD/.tmp  
#
#script:
#  - cmake --version
#  - clang --version
#  - gcc --version

notifications:
  email:
    recipients:
     - simone@cs.utah.edu
    on_success: always
    on_failure: always
  # slack: pruner:aXHVdiVFtqtMfzNW4IutZNDW
