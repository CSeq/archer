language: cpp
cache: apt
sudo: required
dist: trusty
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - gcc-5
    - g++-5

env:
  global:
    - LLVM_VERSION=3.9.0
    - LLVM_ARCHIVE_PATH=$HOME/clang+llvm.tar.xz

before_install:
  - wget http://llvm.org/releases/$LLVM_VERSION/clang+llvm-$LLVM_VERSION-x86_64-linux-gnu-ubuntu-14.04.tar.xz -O $LLVM_ARCHIVE_PATH
  - mkdir $HOME/usr
  - tar xf $LLVM_ARCHIVE_PATH -C $HOME/usr --strip-components 1
  - export PATH=$HOME/usr/bin:$PATH
  - export LD_LIBRARY_PATH=$HOME/usr/bin:$LD_LIBRARY_PATH

install:
  # Create tools dir
  - mkdir -p tools && cd tools
  # Obtain and install cmake >= 3.4.3
  - wget https://cmake.org/files/v3.7/cmake-3.7.1.tar.gz;
    tar xzf cmake-3.7.1.tar.gz;
    cd cmake-3.7.1;
    mkdir build && cd build;
    ../bootstrap;
    make && make install;
    cd ..;
  # Obtain and install ninja
  - git clone git://github.com/ninja-build/ninja.git && cd ninja;
    git checkout release;
    ./bootstrap.py > /dev/null 2>&1;
    sudo cp -v ninja /usr/bin/;
    cd ../..;

script:
  - git clone https://github.com/PRUNER/llvm_archer.git
    # ARCHER with OpenMP Runtime and OMPT Support (Clang/LLVM 3.9)
  - cd llvm_archer;
    ./install.sh --prefix=$HOME/usr ArcherBuild01;
    cd ..;
    cd ArcherBuild01/llvm_build;
    ninja check-libarcher
    cd ../..
    # ARCHER with OpenMP Runtime and ThreadSanitizer support (Clang/LLVM 3.9)
  - cd llvm_archer;
    ./install.sh --prefix=$HOME/usr ArcherBuild02 --omp-tsan-support;
    cd ..;
    cd ArcherBuild01/llvm_build;
    ninja check-libarcher 

notifications:
  # slack: pruner:aXHVdiVFtqtMfzNW4IutZNDW
  email:
    recipients:
     - simone@cs.utah.edu
    on_success: always
    on_failure: always
